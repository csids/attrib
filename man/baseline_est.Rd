% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/baseline_est.R, R/baseline_est_simple.R
\name{baseline_est}
\alias{baseline_est}
\title{For more details see the help vignette:
\code{vignette("nowcast", package="attrib")}}
\usage{
baseline_est(data_train, data_predict, n_sim = 1000, formula, offsett)

baseline_est(data_train, data_predict, n_sim = 1000, formula, offsett)
}
\arguments{
\item{data_train}{Data to train on.}

\item{data_predict}{Data to predict on}

\item{n_sim}{number of simulations to preform. Default setting is n_sim = 1000}

\item{formula}{Formula to model}

\item{offsett}{True or False depending on whetehr there is an offset in the formula or not.}

\item{response}{Response}

\item{fixef}{Fixed effekts}

\item{ranef}{Random effekts, default is NULL}

\item{offset}{Offset, can be NULL}
}
\value{
Residualplots for all ncor_i and some evaluationmetrixs for each of them as well as a plot containing credible intervals using the simulation

Residualplots for all ncor_i and some evaluationmetrixs for each of them as well as a plot containing credible intervals using the simulation
}
\description{
For more details see the help vignette:
\code{vignette("nowcast", package="attrib")}

For more details see the help vignette:
\code{vignette("nowcast", package="attrib")}
}
\examples{
data <- as.data.table(data_fake_nowcasting_county_aggregated)
data <- data[location_code == "county03"]
n_sim <- 100
fixef <- "sin(2 * pi * (week) / 53) + cos(2 * pi * (week ) / 53) + year"
ranef <- "(1|location_code)"
response <- "n_death"
data_train <- data[cut_doe< "2019-06-30"]
data_predict <- data
offset <- "log(pop)"
baseline_est(data_train, data_predict, n_sim = 1000, fixef, ranef, response, offset)
data <- data.table::as.data.table(data_fake_nowcasting_aggregated)
n_sim <- 1000
formula <- paste0("n_death", "~sin(2 * pi * (week) / 53) + cos(2 * pi * (week ) / 53) + year")
data_train <- data[cut_doe< "2019-06-30"]
data_predict <- data
offsett <-FALSE
base_line <- baseline_est(data_train, data_predict, formula = formula, offsett = offsett)

}
